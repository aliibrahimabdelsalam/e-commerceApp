# JDBC connection properties
#
server.port=8080
spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root

#spring.datasource.hikari.minimum-idle=1
#spring.datasource.hikari.maximum-pool-size=2

spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#?serverTimezone=UTC



##to see the SQL statements generated
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate=info


#Oauth2 configure
spring.security.oauth2.client.registration.google.client-id= 122454680654-75kjn48790mgbq0saf19mj4br274rb9p.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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

#paytm
# paytm.payment.sandbox.merchantId:
# paytm.payment.sandbox.merchantKey: 
# paytm.payment.sandbox.channelId:WEB
# paytm.payment.sandbox.industryTypeId:Retail
# paytm.payment.sandbox.website:WEBSTAGING
# paytm.payment.sandbox.paytmUrl:https://securegw-stage.paytm.in/order/process
# paytm.payment.sandbox.callbackUrl:http://localhost:8080/pgresponse
# paytm.payment.sandbox.details.MID: ${paytm.payment.sandbox.merchantId}
# paytm.payment.sandbox.details.CHANNEL_ID: ${paytm.payment.sandbox.channelId}
# paytm.payment.sandbox.details.INDUSTRY_TYPE_ID: ${paytm.payment.sandbox.industryTypeId}
# paytm.payment.sandbox.details.WEBSITE: ${paytm.payment.sandbox.website}
# paytm.payment.sandbox.details.CALLBACK_URL: ${paytm.payment.sandbox.callbackUrl}
# paytm.mobile = 
# paytm.email = 